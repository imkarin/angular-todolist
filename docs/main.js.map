{"version":3,"sources":["./src/app/components/add-todo/add-todo.component.ts","./src/app/components/add-todo/add-todo.component.html","./src/app/components/todos/todos.component.html","./src/app/components/todos/todos.component.ts","./src/environments/environment.ts","./src/app/components/todo-item/todo-item.component.ts","./src/app/components/todo-item/todo-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/services/todo.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;AASjE,MAAM,gBAAgB;IAK3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJlC,YAAO,GAAsB,IAAI,0DAAY,EAAE;IAIT,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,KAAK;SACjB;QACD,2CAA2C;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,0EAA2C;QAArC,4IAAY,cAAU,IAAC;QACzB,2EAA+E;QAA/C,mLAAmB;QAAnD,4DAA+E;QAC/E,sEAAmD;QACvD,4DAAO;;QAF6B,0DAAmB;QAAnB,8EAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAvD,mFAIC;IADD,0VAAiC;IAChC,4DAAgB;;;IAFjB,yEAAa;;ACMN,MAAM,cAAc;IAGzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,0BAA0B;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QACtD,gCAAgC;QAChC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC1E,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,kCAAkC;QAClC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;;4EAvBU,cAAc;8FAAd,cAAc;QDT3B,kFAA0C;QAA5B,sJAAW,mBAAe,IAAC;QAAC,4DAAe;QACzD,8HAIiB;;QAHA,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;AEFzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;AASxE,MAAM,iBAAiB;IAI5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFlC,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAEd,CAAC;IAEjD,QAAQ,KAAW,CAAC;IAEpB,0BAA0B;IAC1B,UAAU;QACR,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI;YACV,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;SACpC;QAED,OAAO,OAAO;IAChB,CAAC;IAED,oCAAoC;IACpC,QAAQ,CAAC,IAAU;QACjB,6DAA6D;QAC7D,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,mBAAmB;QACnB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE;IACpD,CAAC;IAED,yCAAyC;IACzC,QAAQ,CAAC,IAAU;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;kFA7BU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEAA+B;QAC3B,wEAAO;QACH,2EAAmD;QAA5B,0IAAU,sBAAc,IAAC;QAAhD,4DAAmD;QACnD,oEAAG;QAAA,uDAAgB;QAAA,4DAAI;QACvB,4EAAgD;QAAzB,yIAAS,sBAAc,IAAC;QAAC,iEAAC;QAAA,4DAAS;QAC9D,4DAAQ;QACZ,4DAAM;;QAND,qFAAwB;QAGlB,0DAAgB;QAAhB,+EAAgB;;;;;;;;;;;;;;;;;;;;;;ACIpB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,uEAAuB;;;;;;;;;;;;;;ACAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACZ;AAEY;AACT;AACqB;AACW;AACD;AACF;;AAmBrE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAflB,2DAAY;QACZ,gFAAc;QACd,2FAAiB;QACjB,0FAAe;QACf,wFAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;;;;;;;;;;;;;;;;;ACjBR,MAAM,eAAe;IAG1B,gBAAgB,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,OAAO;IACrB,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCP5B,yEAAQ;QACJ,qEAAI;QAAA,uDAAuB;QAAA,4DAAK;QACpC,4DAAS;;QADD,0DAAuB;QAAvB,+FAAuB;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAA+D;;;AAG/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH;AAKM,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,aAAQ,GAAG,4CAA4C,CAAC;QACxD,UAAK,GAAG,2BAA2B;IAEK,CAAC;IAEzC,YAAY;IACZ,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,mBAAmB;IACnB,eAAe,CAAC,IAAU;QACxB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED,eAAe;IACf,UAAU,CAAC,IAAU;QACnB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,YAAY;IACZ,OAAO,CAAC,IAAS;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC/D,CAAC;;sEA1BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TodoService } from '../../services/todo.service';\nimport { Todo } from '../../models/Todo'\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.scss']\n})\nexport class AddTodoComponent implements OnInit {\n  @Output() addTodo: EventEmitter<any> = new EventEmitter()\n\n  title!: string;\n\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const todo = {\n      title: this.title,\n      completed: false\n    }\n    // Send the new Todo to the Todos component\n    this.addTodo.emit(todo)\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" class=\"form\">\n    <input type=\"text\" name=\"title\" [(ngModel)]=\"title\" placeholder=\"Add title...\">\n    <input type=\"submit\" value=\"Submit\" class=\"button\">\n</form>","<app-add-todo (addTodo)=\"addTodo($event)\"></app-add-todo>\r\n<app-todo-item \r\n*ngFor=\"let todo of todos\" \r\n[todo]=\"todo\"\r\n(deleteTodo)=\"deleteTodo($event)\"\r\n></app-todo-item>","import { Component, Input, OnInit } from '@angular/core';\nimport { Todo } from '../../models/Todo';\nimport { TodoService } from '../../services/todo.service'\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\nexport class TodosComponent implements OnInit {\n  todos!: Todo[];\n\n  constructor(private todoService: TodoService) {}\n\n  ngOnInit(): void {\n    this.todoService.getTodos().subscribe(todos => {\n      this.todos = todos;\n    })\n  }\n\n  deleteTodo(todo: Todo) {\n    // Delete todo from the UI\n    this.todos = this.todos.filter(t => t.id !== todo.id);\n    // Make delete request on server\n    this.todoService.deleteTodo(todo).subscribe(t => console.log('deleted'))\n  }\n\n  addTodo(todo: Todo) {\n    // Post the new todo on the server\n    this.todoService.addTodo(todo).subscribe(todo => {\n      this.todos.push(todo);\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Todo } from 'src/app/models/Todo';\nimport { TodoService } from '../../services/todo.service';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})\nexport class TodoItemComponent implements OnInit {\n  @Input() todo!: Todo;\n  @Output() deleteTodo: EventEmitter<Todo> = new EventEmitter();\n\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void { }\n\n  // Set classes dynamically\n  setClasses() {\n    const classes = {\n      todo: true,\n      'is-completed': this.todo.completed\n    }\n\n    return classes\n  }\n\n  // Event listener on checkbox toggle\n  onToggle(todo: Todo) {\n    // Toggle in UI (before server, so it's quicker for the user)\n    this.todo.completed = !todo.completed;\n    // Toggle on server\n    this.todoService.toggleCompleted(todo).subscribe()\n  }\n\n  // Event listener for delete button click\n  onDelete(todo: Todo) {\n    this.deleteTodo.emit(todo);\n  }\n}\n","<div [ngClass]=\"setClasses()\" >\n    <label>\n        <input type=\"checkbox\" (change)=\"onToggle(todo)\" />\n        <p>{{ todo.title }}</p>\n        <button class=\"delete\" (click)=\"onDelete(todo)\">‚ùå</button>\n    </label>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-todolist';\n}\n","<app-header></app-header>\r\n<app-todos></app-todos>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './components/todos/todos.component';\nimport { TodoItemComponent } from './components/todo-item/todo-item.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { AddTodoComponent } from './components/add-todo/add-todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodoItemComponent,\n    HeaderComponent,\n    AddTodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  name!: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.name = 'Karin'\n  }\n\n}\n","<header>\n    <h1>{{ name }}'s to-do list</h1>\n</header>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Todo } from '../models/Todo'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n  query = '?_limit=5&completed=false'\n\n  constructor(private http: HttpClient) { }\n\n  // Get todos\n  getTodos(): Observable<Todo[]> {\n    return this.http.get<Todo[]>(`${this.todosUrl}${this.query}`);\n  }\n\n  // Toggle completed\n  toggleCompleted(todo: Todo): Observable<any> { \n    const url = `${this.todosUrl}/${todo.id}`;\n    return this.http.put(url, todo, httpOptions);\n  }\n\n  // Delete todos\n  deleteTodo(todo: Todo): Observable<Todo> {\n    const url = `${this.todosUrl}/${todo.id}`;\n    return this.http.delete<Todo>(url, httpOptions);\n  }\n\n  // Add todos\n  addTodo(todo: any): Observable<Todo> {\n    return this.http.post<any>(this.todosUrl, todo, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}